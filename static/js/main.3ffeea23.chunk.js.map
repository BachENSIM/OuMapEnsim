{"version":3,"sources":["assets/myMap.jpg","assets/hellboy.glb","assets/flag.glb","mindar-viewer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["ModeViewAR","props","useState","color","setColor","handleClick","sceneRef","useRef","newdX","newdY","newdZ","olddX","olddY","olddZ","x1","setX1","y1","setY1","z1","setZ1","x2","setX2","y2","setY2","z2","setZ2","useEffect","sceneEl","current","arSystem","systems","addEventListener","start","box","document","querySelector","removeEventListener","console","log","ref","mindar-image","color-space","embedded","renderer","vr-mode-ui","device-orientation-permission-ui","id","src","map","hellboy","flag","position","look-controls","scale","mindar-image-target","height","width","rotation","depth","event-set__click","events","click","Navbar","React","aria-label","className","class","href","viewBox","fill","xmlns","x","y","d","target","App","started","setStarted","setX","setY","z","setZ","oldX","setOldX","oldY","setOldY","oldZ","setOldZ","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3ffeea23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/myMap.e78dc06d.jpg\";","export default __webpack_public_path__ + \"static/media/hellboy.fbeeb597.glb\";","export default __webpack_public_path__ + \"static/media/flag.629530c6.glb\";","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport map from \"./assets/myMap.jpg\";\r\nimport hellboy from \"./assets/hellboy.glb\";\r\nimport flag from \"./assets/flag.glb\";\r\nimport person from './person.json';\r\n\r\n\r\n//cette fontionnalité va déclencher quand on active le mode AR et ça met à jour chaque 5s avec de nouvelles données (3 axes X,Y,Z)\r\nconst ModeViewAR = (props) => {\r\n  const [color, setColor] = useState(\"blue\");\r\n  // const handleClick = useCallback((newValue) => {\r\n  //   //console.log('object clicked!');\r\n  //   setColor(color === \"red\" ? \"blue\" : \"red\");\r\n  // },[]);\r\n\r\n  // const handleClick = () => {\r\n  //   //console.log('object clicked!');\r\n  //   setColor(\"red\");\r\n  //   console.log(`${color}`);\r\n  // };\r\n\r\n  const handleClick = () => {\r\n    setColor(color === \"red\" ? \"blue\" : \"red\");\r\n  };\r\n\r\n  const sceneRef = useRef(null);\r\n  //6 properties old X,Y,Z and new X,Y,Z\r\n  const { newdX, newdY, newdZ, olddX, olddY, olddZ } = props;\r\n\r\n  const [x1, setX1] = useState(0);\r\n  const [y1, setY1] = useState(0);\r\n  const [z1, setZ1] = useState(0);\r\n\r\n  const [x2, setX2] = useState(0);\r\n  const [y2, setY2] = useState(0);\r\n  const [z2, setZ2] = useState(0);\r\n\r\n  var height = 2;\r\n  var width = 3 ;\r\n\r\n  var xx1 = -1.5;\r\n  var yy1;\r\n  var zz1;\r\n\r\n\r\n\r\n  let timer;\r\n\r\n  //cette fonction avec 3 pamamètres: newdX, newdY, newdZ\r\n  useEffect(() => {\r\n    //le bouton switch entre 2 modes: AR et Map\r\n    const sceneEl = sceneRef.current;\r\n    const arSystem = sceneEl.systems[\"mindar-image-system\"];\r\n\r\n    setX1(props.olddX);\r\n    setY1(props.olddY);\r\n    setZ1(props.olddZ);\r\n\r\n    setX2(props.newdX);\r\n    setY2(props.newdY);\r\n    setZ2(props.newdZ);\r\n\r\n    sceneEl.addEventListener(\r\n      \"renderstart\",\r\n      () => {\r\n        arSystem.start();\r\n      },\r\n      [arSystem]\r\n    );\r\n    const box = document.querySelector(\"#box\");\r\n    box.addEventListener(\"click\", handleClick);\r\n    return () => {\r\n      box.removeEventListener(\"click\", handleClick);\r\n    };\r\n\r\n\r\n    return () => {\r\n      arSystem.stop();\r\n      clearInterval(timer);\r\n    };\r\n  }, [color]);\r\n  //ça fonctionne encore quand on coupe la caméra\r\n  // var litNumber = [{x:-1.5, y:0,z:0.1},\r\n  //   {x:-1.5, y:0,z:0.1},\r\n  //   {x:-1.25, y:-.015,z:0.1},\r\n  //   {x:-1.05, y:-0.35,z:0.1},\r\n  //   {x:-0.05, y:-0.75,z:0.1},\r\n  //   {x:0.15, y:-0.75,z:0.1},\r\n  //   {x:0.25, y:0.75,z:0.1},\r\n  //   {x:0.35, y:0.875,z:0.1},\r\n  //   {x:1.0, y:0.675,z:0.1}\r\n  // ];\r\n  useEffect(() => {\r\n\r\n    const box = document.querySelector(\"#box\");\r\n    box.addEventListener(\"click\", handleClick);\r\n    console.log(`${color}`);\r\n    // return () => {\r\n    //   box.removeEventListener(\"click\", handleClick);\r\n    // };\r\n\r\n    // let incrementTime = 5000;\r\n    // timer = setInterval(() => {\r\n    //   var min = 0;\r\n    //   var max = 1;\r\n    //   var rand = min + Math.random() * (max - min);\r\n    //   var xx2 = -1.5;\r\n    //   //mettre à jour les values en utilisant state\r\n     \r\n    //   setX1(xx1);\r\n    //   // setY1(y1 + 0.01);\r\n    //   // setZ1(z1 + 0.01);\r\n    //   xx1 = xx1 + 0.1;\r\n    //   setX2(xx1);\r\n    //   // setY2(y1 + 0.02);\r\n    //   // setZ2(z1 + 0.02);\r\n\r\n    //   // console.log(`after 5s x1 ${x1} ${y1} ${z1} ${rand}`);\r\n    //   // console.log(`after 5s x2 ${x2} ${y1} ${z1}`);\r\n\r\n    //   //garder des valeurs anciennes\r\n\r\n    //   //mettre à jour les values en utilisant state\r\n    // }, incrementTime);\r\n   \r\n    // return () => clearInterval(timer);\r\n\r\n  }, [x1, y1, z1, x2, y2, z2,color]);\r\n\r\n  var speed = 5000;\r\n\r\n  // {person.data.map((record) => {\r\n  //   {\r\n  //     return (\r\n  //       console.log(`${((Math.PI*record.pos.lng / 180) *3/2 +1 ).toFixed(3)} ${((Math.PI*record.pos.lat /180) * 2/2 + 1).toFixed(3)} 0.5`)\r\n      \r\n  //     );\r\n  //   }\r\n  // })}\r\n\r\n  return (\r\n    \r\n    <a-scene\r\n      ref={sceneRef}\r\n      mindar-image=\"imageTargetSrc: map.mind; autoStart: false; uiLoading: no; uiError: no; uiScanning: no;\"\r\n      color-space=\"sRGB\"\r\n      embedded\r\n      renderer=\"colorManagement: true, physicallyCorrectLights\"\r\n      vr-mode-ui=\"enabled: false\"\r\n      device-orientation-permission-ui=\"enabled: true\"\r\n    >\r\n      <a-assets>\r\n        <img id=\"card\" src={map} />\r\n\r\n        <a-asset-item id=\"avatarModel\" src={hellboy}></a-asset-item>\r\n        <a-asset-item id=\"flagModel\" src={flag}></a-asset-item>\r\n      </a-assets>\r\n    \r\n      <a-camera position=\"0 0 0\" look-controls=\"enabled: false ;pointerLockEnabled: true;\" >\r\n  <a-cursor scale=\"1 1\" color=\"red\"></a-cursor>\r\n</a-camera>\r\n\r\n      {/* une scène pour dessiner les points intérêts sur la carte  */}\r\n\r\n      {/* une scène pour afficher les étudiant */}\r\n      <a-entity   mindar-image-target=\"targetIndex: 0\">\r\n        <a-plane\r\n          src=\"#card\"\r\n          position=\"0 0 0\"\r\n          height=\"0.75\" //y\r\n          width=\"1\" //x\r\n          rotation=\"0 0 0\"\r\n        ></a-plane>\r\n        {/* <a-box id=\"box\" color={`${color}`} depth=\"0.5\" height=\"0.5\" width=\"0.25\" position=\"0 0 0\" onClick={handleClick} ></a-box> */}\r\n        <a-box id=\"box\" color={`${color}`} depth=\"0.5\" height=\"0.5\" width=\"0.25\" position=\"0 0 0\" \r\n              // events={{\r\n              //           click: () => setColor(\"red\"),\r\n              //         }}\r\n              event-set__click=\"material.color: yellow; scale: 2 2 2\"\r\n                  events={{\r\n                        click: () => setColor(\"red\"),\r\n                      }}     \r\n                      >\r\n\r\n        </a-box>\r\n        {/* <a-box id=\"box\" color=\"red\" depth=\"0.5\" height=\"0.5\" width=\"0.25\" position=\"0 0 0\" onClick={handleClick} ></a-box> */}\r\n\r\n\r\n\r\n        {/* afficher les flags pour déterminer des points intérets */}\r\n        {/* <a-gltf-model\r\n          rotation=\"0 270 0 \"\r\n          position=\"-1.5 0 0.1\"\r\n          scale=\"0.3 0.3 0.3\"\r\n          src=\"#flagModel\"\r\n          color=\"red\"\r\n        ></a-gltf-model>\r\n\r\n        <a-gltf-model\r\n          rotation=\"0 270 0 \"\r\n          position=\"0.2 -0.75 0.1\"\r\n          scale=\"0.3 0.3 0.3\"\r\n          src=\"#flagModel\"\r\n        ></a-gltf-model>\r\n\r\n        <a-gltf-model\r\n          rotation=\"0 270 0 \"\r\n          position=\"1.5 0.75 0.1\"\r\n          scale=\"0.3 0.3 0.3\"\r\n          src=\"#flagModel\"\r\n        ></a-gltf-model> */}\r\n\r\n        {/* Pour afficher le trajet à réaliser par des  */}\r\n        {/* <a-entity\r\n          line=\"start: -1.5 0 0.1; end: -1.25 -0.15 0.1; color: green;\"\r\n          line__2=\"start: -1.25 -0.15 0.1; end: -1.05 -0.35 0.1; color: green\"\r\n          line__3=\"start: -1.05 -0.35 0.1; end: -0.05 -0.75 0.1; color: green\"\r\n          line__4=\"start: -0.05 -0.75 0.1; end: 0.15 -0.75 0.1; color: green\"\r\n          line__5=\"start:  0.15 -0.75 0.1; end: 0.25 0.75 0.1; color: green\"\r\n          line__6=\"start: 0.25 0.75 0.1; end: 0.35 0.875 0.1; color: green\"\r\n          line__7=\"start: 0.35 0.875 0.1; end: 1.0 0.675 0.1; color: green\"\r\n          line__8=\"start: 1.0 0.675 0.1; end: 1.5 0.675 0.1; color: green\"\r\n        ></a-entity>\r\n\r\n        <a-entity\r\n          line=\"start: -1.5 0 0.1; end: -1.25 0.25 0.1; color: red;\"\r\n          line__2=\"start: -1.25 0.25 0.1; end: -0.85 0.95 0.1; color: red;\"\r\n          line__3=\"start:  -0.85 0.95 0.1; end: 0 0.95 0.1; color: red;\"\r\n          line__4=\"start:  0 0.95 0.1; end: 1.5 0.65 0.1; color: red;\"\r\n          line__5=\"start:  1.5 0.65 0.1; end: 1.5 -0.45 0.1; color: red;\"\r\n          line__6=\"start: 1.5 -0.45 0.1; end: 0 -0.85 0.1; color: red;\"\r\n          line__7=\"start:0 -0.85 0.1; end: -1.0 -0.85 0.1; color: red;\"\r\n          line__8=\"start: -1.0 -0.85 0.1; end: -1.5 0 0.1; color: red;\"\r\n        ></a-entity> */}\r\n\r\n        {/* <a-entity\r\n          line={`\"start: -0.5 0 0.1; end: -0.25 0.25 0.1; color: ${color};\" `}\r\n        \r\n        ></a-entity>  */}\r\n\r\n        {/* perso 1 */}\r\n        {/* <a-gltf-model\r\n          rotation=\"0 0 0 \"\r\n          position=\"-1 0 0.5\"\r\n          scale=\"0.3 0.3 0.3\"\r\n          src=\"#avatarModel\"\r\n          onClick={handleClick}\r\n          animation={`property: position; from: ${x1} ${y1} ${z1} ; to: ${x2} ${y2} ${z2};dur:${speed}; easing: easeInOutQuad; loop: true; dir: alternate`}\r\n        ></a-gltf-model> */}\r\n\r\n        {/* {person.data.map((record) => {\r\n          {\r\n            return (\r\n              <a-gltf-model\r\n                rotation=\"0 0 0\"\r\n                position={`${((Math.PI*record.pos.lng / 180) *1/2).toFixed(3)} ${((Math.PI*record.pos.lat / 180) * 1/2).toFixed(3)} 0.5`}\r\n                scale=\"0.1 0.1 0.1\"\r\n                src=\"#avatarModel\"\r\n                // onClick={handleClick}\r\n                \r\n                // animation={`property: position; from: ${x1} ${y1} ${z1} ; to: ${x2} ${y2} ${z2};dur:${speed}; easing: easeInOutQuad; loop: true; dir: alternate`}\r\n                animation={`property: position; from: ${((Math.PI*record.pos.lng / 180) *1/2).toFixed(3)}  ${((Math.PI*record.pos.lat / 180) * 1/2).toFixed(3)} 0.5 ; to: ${((Math.PI*record.pos.lng / 180) *1/2 +1).toFixed(3)}  ${((Math.PI*record.pos.lat / 180) * 1/2 +1 ).toFixed(3)} 0.5;dur:${speed}; easing: easeInOutQuad; loop: true; dir: alternate`}\r\n              ></a-gltf-model>\r\n            );\r\n          }\r\n        })} */}\r\n\r\n        {/* perso 2 */}\r\n        {/* <a-gltf-model\r\n          rotation=\"0 0 0 \"\r\n          position=\"-1 0 0.1\"\r\n          scale=\"0.2 0.2 0.2\"\r\n          src=\"#avatarModel\"\r\n          animation={`property: position; from: ${x1 + 0.1} ${y1 + 0.01} ${\r\n            z1 + 0.01\r\n          } ; to: ${x2 + 0.01} ${y2 + 0.01} ${\r\n            z2 + 0.01\r\n          };dur:4000; easing: easeInOutQuad; loop: true; dir: alternate`}\r\n          // animation={`property: position; from: -1 0 0.5; to: 0 1.25 0.95;dur:4000; easing: easeInOutQuad; loop: true; dir: alternate`}\r\n        ></a-gltf-model> */}\r\n      </a-entity>\r\n      \r\n\r\n\r\n    </a-scene>\r\n  );\r\n}; \r\n\r\nexport default ModeViewAR;\r\n","import React from 'react'\r\nexport default function Navbar() {\r\n\tconst [navbarOpen, setNavbarOpen] = React.useState(false);\r\n\treturn (\r\n\t\t<header aria-label=\"Site Header\" className=\"shadow-md shadow-gray-500\">\r\n\t\t\t<div\r\n\t\t\t\tclass=\"mx-auto flex h-16 max-w-screen-xl items-center justify-between px-4 \"\r\n\t\t\t>\r\n\t\t\t\t<div class=\"hidden items-center gap-4 lg:flex\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"\"\r\n\t\t\t\t\t\tclass=\"rounded-lg  px-5 py-2 text-indigo-700  text-lg font-bold font-medium \"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\tclass=\"h-8 text-indigo-600 font-medium\"\r\n\t\t\t\t\t\t\tviewBox=\"0 0 118 24\"\r\n\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<text x=\"40\" y=\"18\" fill=\"currentColor\">Ou-Map</text>\r\n\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\td=\"M0.41 10.3847C1.14777 7.4194 2.85643 4.7861 5.2639 2.90424C7.6714 1.02234 10.6393 0 13.695 0C16.7507 0 19.7186 1.02234 22.1261 2.90424C24.5336 4.7861 26.2422 7.4194 26.98 10.3847H25.78C23.7557 10.3549 21.7729 10.9599 20.11 12.1147C20.014 12.1842 19.9138 12.2477 19.81 12.3047H19.67C19.5662 12.2477 19.466 12.1842 19.37 12.1147C17.6924 10.9866 15.7166 10.3841 13.695 10.3841C11.6734 10.3841 9.6976 10.9866 8.02 12.1147C7.924 12.1842 7.8238 12.2477 7.72 12.3047H7.58C7.4762 12.2477 7.376 12.1842 7.28 12.1147C5.6171 10.9599 3.6343 10.3549 1.61 10.3847H0.41ZM23.62 16.6547C24.236 16.175 24.9995 15.924 25.78 15.9447H27.39V12.7347H25.78C24.4052 12.7181 23.0619 13.146 21.95 13.9547C21.3243 14.416 20.5674 14.6649 19.79 14.6649C19.0126 14.6649 18.2557 14.416 17.63 13.9547C16.4899 13.1611 15.1341 12.7356 13.745 12.7356C12.3559 12.7356 11.0001 13.1611 9.86 13.9547C9.2343 14.416 8.4774 14.6649 7.7 14.6649C6.9226 14.6649 6.1657 14.416 5.54 13.9547C4.4144 13.1356 3.0518 12.7072 1.66 12.7347H0V15.9447H1.61C2.39051 15.924 3.154 16.175 3.77 16.6547C4.908 17.4489 6.2623 17.8747 7.65 17.8747C9.0377 17.8747 10.392 17.4489 11.53 16.6547C12.1468 16.1765 12.9097 15.9257 13.69 15.9447C14.4708 15.9223 15.2348 16.1735 15.85 16.6547C16.9901 17.4484 18.3459 17.8738 19.735 17.8738C21.1241 17.8738 22.4799 17.4484 23.62 16.6547ZM23.62 22.3947C24.236 21.915 24.9995 21.664 25.78 21.6847H27.39V18.4747H25.78C24.4052 18.4581 23.0619 18.886 21.95 19.6947C21.3243 20.156 20.5674 20.4049 19.79 20.4049C19.0126 20.4049 18.2557 20.156 17.63 19.6947C16.4899 18.9011 15.1341 18.4757 13.745 18.4757C12.3559 18.4757 11.0001 18.9011 9.86 19.6947C9.2343 20.156 8.4774 20.4049 7.7 20.4049C6.9226 20.4049 6.1657 20.156 5.54 19.6947C4.4144 18.8757 3.0518 18.4472 1.66 18.4747H0V21.6847H1.61C2.39051 21.664 3.154 21.915 3.77 22.3947C4.908 23.1889 6.2623 23.6147 7.65 23.6147C9.0377 23.6147 10.392 23.1889 11.53 22.3947C12.1468 21.9165 12.9097 21.6657 13.69 21.6847C14.4708 21.6623 15.2348 21.9135 15.85 22.3947C16.9901 23.1884 18.3459 23.6138 19.735 23.6138C21.1241 23.6138 22.4799 23.1884 23.62 22.3947Z\"\r\n\t\t\t\t\t\t\t\tfill=\"currentColor\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<nav\r\n\t\t\t\t\taria-label=\"Site Nav\"\r\n\t\t\t\t\tclass=\"hidden items-center justify-center gap-8 text-sm font-medium lg:flex lg:w-0 lg:flex-1\"\r\n\t\t\t\t>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://mouad-sellak.github.io/O-Map-Ensim/\"\r\n\t\t\t\t\tclass=\"rounded-lg  px-5 py-2 text-indigo-700  text-md font-bold \"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"\">Mode Normal</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t)\r\n}\r\n","import React, { useState } from 'react';\r\nimport 'mind-ar/dist/mindar-image.prod.js';\r\nimport 'aframe';\r\nimport 'mind-ar/dist/mindar-image-aframe.prod.js';\r\nimport './App.css';\r\nimport ModeViewAR from \"./mindar-viewer\";\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [started, setStarted] = useState(false);\r\n  const [x, setX] = useState(1);\r\n  const [y, setY] = useState(1);\r\n  const [z, setZ] = useState(1);\r\n  const [oldX, setOldX] = useState(0);\r\n  const [oldY, setOldY] = useState(0);\r\n  const [oldZ, setOldZ] = useState(0);\r\n\r\n\r\n  //If any input changes reset\r\n  const basicReset = () => {\r\n    setStarted(true);\r\n   \r\n  };\r\n\r\n  //fonction pour mettre à jour les valeurs\r\n  const changeValue = () => {\r\n    // const { x1 } = old1.target.value;\r\n    // const { y1 } = old2.target.value;\r\n    // const { z1 } = old3.target.value;\r\n    // const { x2 } = new1.target.value;\r\n    // const { y2 } = new2.target.value;\r\n    // const { z2 } = new3.target.value;\r\n    // for (var i = 0; i < 10; i++) {\r\n    //   setOldX(i);\r\n    //   setOldY(i);\r\n    //   setOldZ(i);\r\n    //   i++;\r\n    //   setX(i++);\r\n    //   setY(i++);\r\n    //   setZ(i++);\r\n\r\n    //   console.log(`${oldX} ${oldY} ${oldZ} ; to: ${x} ${y} ${z};`);\r\n    //   //\r\n    // }\r\n    setOldX(-1.5);\r\n    setOldY(0);\r\n    setOldZ(0);\r\n    setX(-1.4);\r\n    setY(0);\r\n    setZ(0);\r\n   \r\n    basicReset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <h1>\r\n        Example React component with{\" \"}\r\n        <a href=\"https://github.com/hiukim/mind-ar-js\" target=\"_blank\">\r\n          MindAR\r\n        </a>\r\n      </h1>\r\n      \r\n      <div>\r\n        {/* {!started && <button onClick={() => {setStarted(true)}}>Start</button>} */}\r\n        {!started && <button onClick={changeValue}>Start</button>}\r\n        {started && (\r\n          <button\r\n            onClick={() => {\r\n              setStarted(false);\r\n             \r\n            }}\r\n          >\r\n            Stop\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {started && (\r\n        <div className=\"container\">\r\n          {/* <MindARViewer/> */}\r\n          <ModeViewAR\r\n            newdX={x}\r\n            newdY={y}\r\n            newdZ={z}\r\n            olddX={oldX}\r\n            olddY={oldY}\r\n            olddZ={oldZ}\r\n         \r\n           \r\n          />\r\n          <video></video>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//react 18\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n// root.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}