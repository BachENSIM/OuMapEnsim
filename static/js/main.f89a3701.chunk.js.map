{"version":3,"sources":["assets/myMap.jpg","assets/hellboy.glb","assets/flag.glb","App.js","reportWebVitals.js","index.js"],"names":["App","onClick","event","clickedEntity","target","closest","console","log","id","geometry","primitive","material","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAAe,ICAA,ICAA,I,YCWf,IAeeA,EAfH,WAQV,OACE,yBAASC,QARS,SAACC,GACnB,IAAMC,EAAgBD,EAAME,OAAOC,QAAQ,YACvCF,GACFG,QAAQC,IAAI,wBAAyBJ,EAAcK,KAKrD,SACE,0BAAUA,GAAG,MAAMC,SAAU,CAAEC,UAAW,OAASC,SAAU,CAAEC,MAAO,YCT7DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAc1Bb,M","file":"static/js/main.f89a3701.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/myMap.e78dc06d.jpg\";","export default __webpack_public_path__ + \"static/media/hellboy.fbeeb597.glb\";","export default __webpack_public_path__ + \"static/media/flag.629530c6.glb\";","//import React, { useState } from 'react';\r\nimport 'mind-ar/dist/mindar-image.prod.js';\r\nimport 'aframe';\r\nimport 'mind-ar/dist/mindar-image-aframe.prod.js';\r\nimport './App.css';\r\nimport ModeViewAR from \"./mindar-viewer\";\r\nimport Navbar from './components/Navbar';\r\n\r\n\r\nimport React, { useRef, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const handleClick = (event) => {\r\n    const clickedEntity = event.target.closest(\"a-entity\");\r\n    if (clickedEntity) {\r\n      console.log(\"Clicked on an entity:\", clickedEntity.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <a-scene onClick={handleClick}>\r\n      <a-entity id=\"box\" geometry={{ primitive: \"box\" }} material={{ color: \"red\" }} />\r\n    </a-scene>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// function App() {\r\n//   const [started, setStarted] = useState(false);\r\n//   const [x, setX] = useState(1);\r\n//   const [y, setY] = useState(1);\r\n//   const [z, setZ] = useState(1);\r\n//   const [oldX, setOldX] = useState(0);\r\n//   const [oldY, setOldY] = useState(0);\r\n//   const [oldZ, setOldZ] = useState(0);\r\n\r\n\r\n//   //If any input changes reset\r\n//   const basicReset = () => {\r\n//     setStarted(true);\r\n   \r\n//   };\r\n\r\n//   //fonction pour mettre Ã  jour les valeurs\r\n//   const changeValue = () => {\r\n//     // const { x1 } = old1.target.value;\r\n//     // const { y1 } = old2.target.value;\r\n//     // const { z1 } = old3.target.value;\r\n//     // const { x2 } = new1.target.value;\r\n//     // const { y2 } = new2.target.value;\r\n//     // const { z2 } = new3.target.value;\r\n//     // for (var i = 0; i < 10; i++) {\r\n//     //   setOldX(i);\r\n//     //   setOldY(i);\r\n//     //   setOldZ(i);\r\n//     //   i++;\r\n//     //   setX(i++);\r\n//     //   setY(i++);\r\n//     //   setZ(i++);\r\n\r\n//     //   console.log(`${oldX} ${oldY} ${oldZ} ; to: ${x} ${y} ${z};`);\r\n//     //   //\r\n//     // }\r\n//     setOldX(-1.5);\r\n//     setOldY(0);\r\n//     setOldZ(0);\r\n//     setX(-1.4);\r\n//     setY(0);\r\n//     setZ(0);\r\n   \r\n//     basicReset();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Navbar />\r\n//       <h1>\r\n//         Example React component with{\" \"}\r\n//         <a href=\"https://github.com/hiukim/mind-ar-js\" target=\"_blank\">\r\n//           MindAR\r\n//         </a>\r\n//       </h1>\r\n      \r\n//       <div>\r\n//         {/* {!started && <button onClick={() => {setStarted(true)}}>Start</button>} */}\r\n//         {!started && <button onClick={changeValue}>Start</button>}\r\n//         {started && (\r\n//           <button\r\n//             onClick={() => {\r\n//               setStarted(false);\r\n             \r\n//             }}\r\n//           >\r\n//             Stop\r\n//           </button>\r\n//         )}\r\n//       </div>\r\n\r\n//       {started && (\r\n//         <div className=\"container\">\r\n//           {/* <MindARViewer/> */}\r\n//           <ModeViewAR\r\n//             newdX={x}\r\n//             newdY={y}\r\n//             newdZ={z}\r\n//             olddX={oldX}\r\n//             olddY={oldY}\r\n//             olddZ={oldZ}\r\n         \r\n           \r\n//           />\r\n//           <video></video>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//react 18\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n// root.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}